{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","react_default","a","createElement","className","type","checked","complete","onChange","id","maxLength","name","TodoList","todos","map","key","LOCAL_STORAGE_KEY","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","prevTodos","concat","toConsumableArray","setItem","stringify","Fragment","Container","Col","Row","ref","placeholder","onClick","current","value","length","window","alert","uuid","newTodos","filter","find","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1ef5f3bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"todos\" >\r\n      <label className='todo'>\r\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} maxLength={15} />\r\n        {todo.name}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n      todos.map(todo => {\r\n        return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n      })\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuid from 'react-uuid';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport './App.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(prevTodos => [...prevTodos, ...storedTodos])\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos)) //save to local storage\n  }, [todos])\n\n  //toggle between completed and incompleted todos\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    if (name.length > 10) {\n      window.alert(\"Todo shouldn't exceed 10 characters\");\n      return;\n    }\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuid(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = '';\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <Container className='container'>\n        <Col>\n          <Row className=\"title\" ><h1>My Favorite Todo App</h1></Row>\n          <div className='instructions' >\n            <p>Type your todos one by one and add them by clicking the 'Add' button.</p>\n            <p>If a task is done, click on the checkbox and hit the 'Clear' button.</p>\n          </div>\n          <Row>\n            <input ref={todoNameRef} type=\"text\" className='input' placeholder='Type here...' ></input>\n          </Row>\n          <Row>\n            <button onClick={handleAddTodo} className='btn'>Add</button>\n            <button onClick={handleClearTodos} className='btn'>Clear</button>\n          </Row>\n          <div className='left-todos' >{todos.filter(todo => !todo.complete).length} todos left</div>\n          <TodoList todos={todos} toggleTodo={toggleTodo} />\n          <Row className='footer' />\n        </Col>\n      </Container>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}