{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","react_default","a","createElement","className","type","checked","complete","onChange","id","name","TodoList","todos","map","key","LOCAL_STORAGE_KEY","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","todoNameRef","useRef","handleAddTodo","current","value","prevTodos","concat","toConsumableArray","uuid","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","Container","Col","Row","Form","Control","required","ref","title","placeholder","maxLength","onKeyDown","e","Button","onClick","newTodos","filter","length","find","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6c67ef80.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <div className=\"todos\" >\r\n      <label className='todo'>\r\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\r\n        {todo.name}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n      todos.map(todo => {\r\n        return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n      })\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport uuid from 'react-uuid';\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap'\nimport './App.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(prevTodos => [...prevTodos, ...storedTodos])\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuid(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = '';\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      handleAddTodo();\n    }\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  function handleClearAllTodos() {\n    setTodos([])\n  }\n\n  return (\n    <>\n      <Container className='container'>\n        <Col>\n          <Row className=\"title\" ><h1>My Favorite Todo App</h1></Row>\n          <div className='instructions' >\n            <p>Type your todos one by one and add them by clicking the 'Add' button.</p>\n            <p>If a task is done, click on the checkbox and hit the 'Clear' button.</p>\n          </div>\n          <Row>\n            <Form>\n              <Form.Control\n                required\n                ref={todoNameRef}\n                type=\"text\"\n                title='Type here max. 10 characters'\n                className='input'\n                placeholder='Type here...'\n                maxLength={10}\n                onKeyDown={handleKeyDown}\n              />\n            </Form>\n          </Row>\n          <Row>\n            <Button onClick={handleAddTodo} className='btn'>Add Item</Button>\n            <Button onClick={handleClearTodos} className='btn'>Clear Selected</Button>\n            <Button onClick={handleClearAllTodos} className='btn'>Clear All</Button>\n          </Row>\n          <div className='left-todos' >{todos.filter(todo => !todo.complete).length} todos left</div>\n          <TodoList todos={todos} toggleTodo={toggleTodo} />\n          <Row className='footer' />\n        </Col>\n      </Container>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}